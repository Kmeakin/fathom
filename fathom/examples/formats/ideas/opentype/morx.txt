//~ ignore = true

//! # Extended glyph metamorphosis table
//!
//! ## References
//!
//! [Apple Developer Documentation](https://developer.apple.com/fonts/TrueType-Reference-Manual/RM06/Chap6morx.html)

let table_header = {
    /// Version number of the extended glyph metamorphosis table (either 2 or 3)
    version <- u16be,
    unused <- u16be, // TODO: reserved, set to 0
    /// Number of metamorphosis chains contained in this table.
    num_chains <- u32be,
};

let chain_header = {
    /// The default specification for subtables.
    default_flags <- u32be,
    /// Total byte count, including this header; must be a multiple of 4.
    chain_length <- u32be,
    /// Number of feature subtable entries.
    num_feature_entries <- u32be,
    /// The number of subtables in the chain.
    num_subtables <- u32be,
};

let feature_table = {
    /// The type of feature.
    feature_type <- uint16,
    /// The feature's setting (aka selector)
    feature_setting <- uint16,
    /// Flags for the settings that this feature and setting enables.
    enable_flags <- uint32,
    /// Complement of flags for the settings that this feature and setting disable.
    disable_flags <- uint32,
};

let subtable_glyph_coverage_table = {
    /// Array of offsets from the beginning of the subtable glyph coverage table
    /// to the glyph coverage bitfield for a given subtable; there is one offset
    /// for each subtable in the chain
    subtable_offsets <- array _ u32be, // TODO: array length? Offset to `subtable`
    /// The individual coverage bitfields
    coverage_bitfields <- array _ u8, // TODO: array length?
};

let subtable_header = {
    /// Total subtable length, including this header.
    length <- u32be,
    /// Coverage flags and subtable type.
    coverage <- u32be,
    /// The 32-bit mask identifying which subtable this is (the subtable being
    /// executed if the AND of this value and the processed `default_flags` is
    /// nonzero).
    sub_feature_flags <- u32be,
};

let subtable = {
    header <- subtable_header,
    ... // TODO: ...
};

// TODO: ...

let morx = {
    header <- table_header,
    chains <- ..., // TODO
    subtable_glyph_coverage_array <- array _ _ if table_header.version >= 3,
};

morx
