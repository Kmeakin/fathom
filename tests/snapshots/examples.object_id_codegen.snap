extern crate ddl_util;

use std::io;
use std::io::prelude::*;

#[derive(Debug, Clone)]
pub struct ObjectId {
    pub epoch_time: u32,
    pub machine_id: u32,
    pub process_id: u16,
    pub counter: u32,
}

impl ObjectId {
    pub fn read<R: Read>(reader: &mut R) -> io::Result<ObjectId> {
        let epoch_time = ddl_util::from_u32le(reader)?;
        let machine_id = ddl_util::from_u24le(reader)?;
        let process_id = ddl_util::from_u16le(reader)?;
        let counter = ddl_util::from_u24le(reader)?;
        Ok::<_, io::Error>(ObjectId {
            epoch_time: epoch_time,
            machine_id: machine_id,
            process_id: process_id,
            counter: counter,
        })
    }
}

