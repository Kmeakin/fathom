// This file is automatically @generated by ddl 0.1.0
// It is not intended for manual editing.

pub const IS_BE: bool = true;

#[derive(Copy, Clone)]
pub struct Test {
    bar: ddl_rt::If<f32, f32>,
}

impl Test {
    pub fn bar(&self) -> ddl_rt::If<f32, f32> {
        self.bar
    }
}

impl ddl_rt::Format for Test {
    type Host = Test;
}

impl<'data> ddl_rt::ReadFormat<'data> for Test {
    fn read(reader: &mut ddl_rt::FormatReader<'data>) -> Result<Test, ddl_rt::ReadError> {
        let bar = if IS_BE { ddl_rt::If::True(reader.read::<ddl_rt::F32Be>()?) } else { ddl_rt::If::True(reader.read::<ddl_rt::F32Le>()?) };

        Ok(Test {
            bar,
        })
    }
}
