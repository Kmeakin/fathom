// This file is automatically @generated by ddl 0.1.0
// It is not intended for manual editing.

//! Test that a struct with a host type field produces a warning.

#[derive(Copy, Clone)]
pub struct Test {
    format: u32,
    host: ddl_rt::InvalidDataDescription,
}

impl Test {
    pub fn format(&self) -> u32 {
        self.format
    }

    pub fn host(&self) -> ddl_rt::InvalidDataDescription {
        self.host
    }
}

impl ddl_rt::Binary for Test {
    type Host = Test;
}

impl<'data> ddl_rt::ReadBinary<'data> for Test {
    fn read(ctxt: &mut ddl_rt::ReadCtxt<'data>) -> Result<Test, ddl_rt::ReadError> {
        let format = ctxt.read::<ddl_rt::U32Be>()?;
        let host = ctxt.read::<ddl_rt::InvalidDataDescription>()?;

        Ok(Test {
            format,
            host,
        })
    }
}
