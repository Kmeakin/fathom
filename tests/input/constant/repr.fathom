//! Test the `repr` operator.

const TestType = repr Type; //~ error: type mismatch
const TestFormat = repr Format; //~ error: type mismatch

const TestU8 : repr U8 = 0 : Int;
const TestU16Le : repr U16Le = 0 : Int;
const TestU16Be : repr U16Be = 0 : Int;
const TestU32Le : repr U32Le = 0 : Int;
const TestU32Be : repr U32Be = 0 : Int;
const TestU64Le : repr U64Le = 0 : Int;
const TestU64Be : repr U64Be = 0 : Int;
const TestS8 : repr S8 = 0 : Int;
const TestS16Le : repr S16Le = 0 : Int;
const TestS16Be : repr S16Be = 0 : Int;
const TestS32Le : repr S32Le = 0 : Int;
const TestS32Be : repr S32Be = 0 : Int;
const TestS64Le : repr S64Le = 0 : Int;
const TestS64Be : repr S64Be = 0 : Int;
const TestF32Le : repr F32Le = 0.0 : F32;
const TestF32Be : repr F32Be = 0.0 : F32;
const TestF64Le : repr F64Le = 0.0 : F64;
const TestF64Be : repr F64Be = 0.0 : F64;
const TestFormatArray : Type = repr (FormatArray 2 U32Be);

struct PointFormat : Format {
    x : F32Be,
    y : F32Be,
}

struct PointType : Type {
    x : F32,
    y : F32,
}

const TestPointFormat : Type = repr PointFormat;
const TestPointType = repr PointType; //~ error: type mismatch

const TestInt = repr Int; //~ error: type mismatch
const TestF32 = repr F32; //~ error: type mismatch
const TestF64 = repr F64; //~ error: type mismatch
const TestBool = repr Bool; //~ error: type mismatch
const test_true = repr true; //~ error: type mismatch
const test_false = repr false; //~ error: type mismatch
const TestArray = repr (Array 3 Int); //~ error: type mismatch
