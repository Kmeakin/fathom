% Bidirectional stratification of the core language.

%extend core_to_stratified.

    %open fathom.lang.
    %open fathom.lang.stratified.semantics.


    % Stratified terms
    term : type.

    term2 : stratified.term2 -> term.
    term1 : stratified.term1 -> term.
    term0 : stratified.term0 -> term.

    % Stratified universes
    universe : type.

    term2 : universe.
    term1 : universe.


    % Stratification context.
    context : type.

    context : list universe -> context.

    %extend context.

        lookup_universe : context -> int -> universe -> prop.
        lookup_universe (context Entries) Index Universe :-
            list.nth Entries Index Universe.

        add_binding : context -> universe -> context -> prop.
        add_binding (context Entries) Universe (context (Universe :: Entries)).

    %end.


    % Stratify a term.
    from_term : context -> core.term -> term -> prop.

    % Variables
    from_term Context (core.local Index) (term1 (stratified.local Index)) :-
        context.lookup_universe Context Index term2.
    from_term Context (core.local Index) (term0 (stratified.local Index)) :-
        context.lookup_universe Context Index term1.

    % Universes
    from_term Context core.type_type (term2 stratified.type_type).

    % Functions
    from_term Context (core.function_type SourceInputType SourceOutputType) _ :- TODO.
    from_term Context (core.function_intro SourceInputType SourceOutputElem) _ :- TODO.
    from_term Context (core.function_elim SourceElem SourceInputElem) _ :- TODO.

    % Records
    from_term Context (core.record_type []) (term1 (stratified.record_type [])).
    from_term Context (core.record_type (( Label, SourceType ) :: SourceTypeFields))
        (term1 (stratified.record_type (( Label, TargetType ) :: TargetTypeFields)))
    :-
        from_term Context SourceType (term1 TargetType),
        context.add_binding Context term1 Context',
        from_term Context'
            (core.record_type SourceTypeFields)
            (term1 (stratified.record_type TargetTypeFields)).
    from_term Context (core.record_intro [] []) (term0 (stratified.record_intro [] [])).
    from_term Context
        (core.record_intro SourceElemFields (( Label, SourceType ) :: SourceTypeFields))
        (term0
            (stratified.record_intro
                (( Label, TargetElem ) :: TargetElemFields)
                (( Label, TargetType ) :: TargetTypeFields)))
    :-
        map.remove SourceElemFields Label SourceElem SourceElemFields',
        from_term Context SourceElem (term0 TargetElem),
        from_term Context SourceType (term1 TargetType),
        context.add_binding Context term1 Context',
        from_term Context'
            (core.record_intro SourceElemFields' SourceTypeFields)
            (term0 (stratified.record_intro TargetElemFields TargetTypeFields)).
    from_term Context (core.record_elim SourceRecordElem Label)
        (term0 (stratified.record_elim TargetRecordElem Label))
    :-
        from_term Context SourceRecordElem (term0 TargetRecordElem).

    % Enumerations
    from_term Context (core.enum_type Labels) (term1 (stratified.enum_type Labels)).
    from_term Context (core.enum_intro Label Labels) (term0 (stratified.enum_intro Label Labels)).
    from_term Context (core.enum_elim SourceClauses SourceType)
        (term1 (stratified.enum_elim TargetClauses TargetType))
    :-
        map.mapvalues (pfun SourceElem TargetElem =>
            from_term Context SourceElem (term1 TargetElem)
        ) SourceClauses TargetClauses,
        context.add_binding Context term1 Context',
        from_term Context' SourceType (term2 TargetType).
    from_term Context (core.enum_elim SourceClauses SourceType)
        (term0 (stratified.enum_elim TargetClauses TargetType))
    :-
        map.mapvalues (pfun SourceElem TargetElem =>
            from_term Context SourceElem (term0 TargetElem)
        ) SourceClauses TargetClauses,
        context.add_binding Context term1 Context',
        from_term Context' SourceType (term1 TargetType).

    % Integers
    from_term Context core.int_type (term1 stratified.int_type).
    from_term Context (core.int_intro Int) (term0 (stratified.int_intro Int)).

    % Arrays
    from_term Context (core.array_type SourceType SourceLenElem)
        (term1 (stratified.array_type TargetType TargetLenElem))
    :-
        from_term Context SourceType (term1 TargetType),
        from_term Context SourceLenElem (term0 TargetLenElem).
    from_term Context (core.array_intro SourceElems SourceType)
        (term0 (stratified.array_intro TargetElems TargetType))
    :-
        from_term Context SourceType (term1 TargetType),
        map (pfun SourceElem TargetElem =>
            from_term Context SourceElem (term0 TargetElem)
        ) SourceElems TargetElems.
    from_term Context (core.array_elim SourceArrayElem SourceIndexElem)
        (term0 (stratified.array_elim TargetArrayElem TargetIndexElem))
    :-
        from_term Context SourceArrayElem (term0 TargetArrayElem),
        from_term Context SourceIndexElem (term0 TargetIndexElem).

    % Binary format descriptions
    from_term Context core.format_type (term2 stratified.format_type).
    from_term Context core.format_intro_unit (term1 stratified.format_intro_unit).
    from_term Context core.format_intro_u8 (term1 stratified.format_intro_u8).
    from_term Context core.format_intro_u16le (term1 stratified.format_intro_u16le).
    from_term Context core.format_intro_u16be (term1 stratified.format_intro_u16be).
    from_term Context core.format_intro_u32le (term1 stratified.format_intro_u32le).
    from_term Context core.format_intro_u32be (term1 stratified.format_intro_u32be).
    from_term Context core.format_intro_u64le (term1 stratified.format_intro_u64le).
    from_term Context core.format_intro_u64be (term1 stratified.format_intro_u64be).
    from_term Context core.format_intro_s8 (term1 stratified.format_intro_s8).
    from_term Context core.format_intro_s16le (term1 stratified.format_intro_s16le).
    from_term Context core.format_intro_s16be (term1 stratified.format_intro_s16be).
    from_term Context core.format_intro_s32le (term1 stratified.format_intro_s32le).
    from_term Context core.format_intro_s32be (term1 stratified.format_intro_s32be).
    from_term Context core.format_intro_s64le (term1 stratified.format_intro_s64le).
    from_term Context core.format_intro_s64be (term1 stratified.format_intro_s64be).
    from_term Context (core.format_intro_array SourceType SourceLenElem)
        (term1 (stratified.format_intro_array TargetType TargetLenElem))
    :-
        from_term Context SourceType (term1 TargetType),
        from_term Context SourceLenElem (term0 TargetLenElem).
    from_term Context (core.format_intro_record []) (term1 (stratified.format_intro_record [])).
    from_term Context (core.format_intro_record (( Label, SourceType ) :: SourceTypeFields))
        (term1 (stratified.format_intro_record (( Label, TargetType ) :: TargetTypeFields)))
    :-
        from_term Context SourceType (term1 TargetType),
        context.add_binding Context term1 Context',
        from_term Context'
            (core.format_intro_record SourceTypeFields)
            (term1 (stratified.format_intro_record TargetTypeFields)).
    from_term Context (core.format_intro_compute SourceElem SourceType)
        (term1 (stratified.format_intro_compute TargetElem TargetType))
    :-
        from_term Context SourceType (term1 TargetType),
        from_term Context SourceElem (term0 TargetElem).
    from_term Context (core.format_intro_absorb SourceType)
        (term1 (stratified.format_intro_absorb TargetType))
    :-
        from_term Context SourceType (term1 TargetType).
    from_term Context (core.format_elim SourceType) (term2 (stratified.format_elim TargetType)) :-
        from_term Context SourceType (term1 TargetType).


    % Convenience predicates

    from_term : core.term -> term -> prop.
    from_term Source Target :-
        from_term (context []) Source Target.

%end.
